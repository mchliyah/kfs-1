     1                                  bits 16
     2                                  org 0x7C00
     3                                  
     4                                  %define ENDL 0x0D, 0x0A
     5                                  
     6                                  start:
     7                                      ; Initialize segments and stack
     8 00000000 31C0                        xor ax, ax
     9 00000002 8ED8                        mov ds, ax
    10 00000004 8EC0                        mov es, ax
    11 00000006 8ED0                        mov ss, ax
    12 00000008 BC007C                      mov sp, 0x7C00      ; Stack grows down from bootloader
    13                                  
    14                                      ; Reset disk system
    15 0000000B B400                        mov ah, 0x00
    16 0000000D B200                        mov dl, 0x00        ; Drive 0 (floppy)
    17 0000000F CD13                        int 0x13
    18 00000011 7243                        jc disk_error
    19                                  
    20                                      ; Load kernel to 0x1000:0x0000 (physical 0x10000)
    21 00000013 B80010                      mov ax, 0x1000
    22 00000016 8EC0                        mov es, ax
    23 00000018 31DB                        xor bx, bx
    24                                  
    25 0000001A B402                        mov ah, 0x02        ; Read sectors
    26 0000001C B002                        mov al, 2           ; Read 2 sectors (kernel is small)
    27 0000001E B500                        mov ch, 0           ; Cylinder 0
    28 00000020 B102                        mov cl, 2           ; Sector 2 (1 is boot sector)
    29 00000022 B600                        mov dh, 0           ; Head 0
    30 00000024 B200                        mov dl, 0x00        ; Drive 0 (floppy)
    31 00000026 CD13                        int 0x13
    32 00000028 722C                        jc disk_error
    33                                  
    34                                      ; Verify we read enough sectors
    35 0000002A 3C02                        cmp al, 2
    36 0000002C 7528                        jne disk_error
    37                                  
    38                                      ; Switch to protected mode
    39 0000002E FA                          cli
    40 0000002F 0F0116[9200]                lgdt [gdt_descriptor]
    41 00000034 0F20C0                      mov eax, cr0
    42 00000037 6683C801                    or eax, 0x1
    43 0000003B 0F22C0                      mov cr0, eax
    44 0000003E EA[4300]0800                jmp CODE_SEG:init_pm
    45                                  
    46                                  bits 32
    47                                  init_pm:
    48 00000043 66B81000                    mov ax, DATA_SEG
    49 00000047 8ED8                        mov ds, ax
    50 00000049 8ED0                        mov ss, ax
    51 0000004B 8EC0                        mov es, ax
    52 0000004D 8EE0                        mov fs, ax
    53 0000004F 8EE8                        mov gs, ax
    54                                  
    55                                      ; Jump to kernel
    56 00000051 E9(00000100)                jmp 0x10000
    57                                  
    58                                  disk_error:
    59 00000056 66BE[6C00]                  mov si, error_msg
    60 0000005A E801000000                  call print_string
    61 0000005F F4                          hlt
    62                                  
    63                                  print_string:
    64 00000060 AC                          lodsb
    65 00000061 08C0                        or al, al
    66 00000063 7406                        jz .done
    67 00000065 B40E                        mov ah, 0x0E
    68 00000067 CD10                        int 0x10
    69 00000069 EBF5                        jmp print_string
    70                                  .done:
    71 0000006B C3                          ret
    72                                  
    73 0000006C 4469736B206572726F-     error_msg db "Disk error!", ENDL, 0
    73 00000075 72210D0A00         
    74                                  
    75                                  ; GDT
    76                                  gdt_start:
    77 0000007A 0000000000000000            dq 0x0
    78                                  gdt_code:
    79 00000082 FFFF                        dw 0xFFFF       ; Limit low
    80 00000084 0000                        dw 0x0          ; Base low
    81 00000086 00                          db 0x0          ; Base middle
    82 00000087 9A                          db 10011010b    ; Access
    83 00000088 CF                          db 11001111b    ; Granularity
    84 00000089 00                          db 0x0          ; Base high
    85                                  gdt_data:
    86 0000008A FFFF                        dw 0xFFFF       ; Limit low
    87 0000008C 0000                        dw 0x0          ; Base low
    88 0000008E 00                          db 0x0          ; Base middle
    89 0000008F 92                          db 10010010b    ; Access
    90 00000090 CF                          db 11001111b    ; Granularity
    91 00000091 00                          db 0x0          ; Base high
    92                                  gdt_end:
    93                                  
    94                                  gdt_descriptor:
    95 00000092 1700                        dw gdt_end - gdt_start - 1
    96 00000094 [7A000000]                  dd gdt_start
    97                                  
    98                                  CODE_SEG equ gdt_code - gdt_start
    99                                  DATA_SEG equ gdt_data - gdt_start
   100                                  
   101 00000098 00<rep 166h>            times 510-($-$$) db 0
   102 000001FE 55AA                    dw 0xAA55
